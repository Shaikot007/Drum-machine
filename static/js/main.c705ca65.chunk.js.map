{"version":3,"sources":["DrumMachine.js","serviceWorker.js","index.js"],"names":["SoundData","keyCode","keyTrigger","id","url","DrumMachine","props","playAudio","state","power","sound","document","getElementById","currentTime","play","volume","audioVolume","handleDisplay","handleKeydown","event","find","soundData","setState","display","handlePower","adjustVolume","target","value","Math","round","setTimeout","clearDisplay","String","fromCharCode","addEventListener","this","removeEventListener","className","onClick","src","type","checked","onChange","min","max","step","defaultValue","href","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c705ca65.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './DrumMachine.css';\n\nconst SoundData = [\n  {\n    keyCode: 81,\n    keyTrigger: 'Q',\n    id: 'Heater-1',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n  }, {\n    keyCode: 87,\n    keyTrigger: 'W',\n    id: 'Heater-2',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n  }, {\n    keyCode: 69,\n    keyTrigger: 'E',\n    id: 'Heater-3',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n  }, {\n    keyCode: 65,\n    keyTrigger: 'A',\n    id: 'Heater-4',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n  }, {\n    keyCode: 83,\n    keyTrigger: 'S',\n    id: 'Clap',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n  }, {\n    keyCode: 68,\n    keyTrigger: 'D',\n    id: 'Open-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n  }, {\n    keyCode: 90,\n    keyTrigger: 'Z',\n    id: \"Kick-n'-Hat\",\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n  }, {\n    keyCode: 88,\n    keyTrigger: 'X',\n    id: 'Kick',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n  }, {\n    keyCode: 67,\n    keyTrigger: 'C',\n    id: 'Closed-HH',\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n  },\n];\n\nclass DrumMachine extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"Click or Press a Key\",\n      audioVolume: 0.5,\n      power: true,\n    }\n  }\n  \n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeydown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeydown);\n  }\n\n  // For play audio\n  playAudio = (keyTrigger, id) => {\n    if(this.state.power) {\n      const sound = document.getElementById(keyTrigger);\n      sound.currentTime = 0;\n      sound.play();\n      sound.volume = this.state.audioVolume;\n      this.handleDisplay(id);\n    }\n  }\n\n  // For press a keyboard button\n  handleKeydown = event => {\n    if(this.state.power) {\n      const sound = SoundData.find(soundData => soundData.keyCode === event.keyCode);\n      if (sound) {\n        this.playAudio(sound.keyTrigger, sound.id);\n      }\n    }\n  }\n\n  // For display a id name by click or press a keyboard button\n  handleDisplay = (event) => {\n    this.setState({\n      display: event\n    });\n  }\n  \n  // For power button on off\n  handlePower = () => {\n    this.setState((state) => ({\n      power: !state.power,\n      display: 'Click or Press a Key'\n    }))\n  }\n  \n  // For volume slider\n  adjustVolume = (event) => {\n    if (this.state.power) {\n      this.setState({\n        audioVolume: event.target.value,\n        display: \"Volume: \" + Math.round(event.target.value * 100)\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n\n  // For clear volume value\n  clearDisplay = () => {\n    this.setState({\n      display: String.fromCharCode(160)\n    });\n  }\n\n  render () {\n    return (\n      <div id=\"drum-machine\">\n        <div className=\"drum-box\">\n          <header>\n            <h5>Drum Machine</h5>\n          </header>\n          <div id=\"drum-pad\">\n            <div className=\"all-drum-button\">\n              <div className=\"drum-button\">\n                <button className=\"drum-pad\" id={SoundData[0].id} onClick={() => this.playAudio(SoundData[0].keyTrigger, SoundData[0].id)}>{SoundData[0].keyTrigger}<audio className=\"clip\" id={SoundData[0].keyTrigger} src={SoundData[0].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[1].id} onClick={() => this.playAudio(SoundData[1].keyTrigger, SoundData[1].id)}>{SoundData[1].keyTrigger}<audio className=\"clip\" id={SoundData[1].keyTrigger} src={SoundData[1].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[2].id} onClick={() => this.playAudio(SoundData[2].keyTrigger, SoundData[2].id)}>{SoundData[2].keyTrigger}<audio className=\"clip\" id={SoundData[2].keyTrigger} src={SoundData[2].url} type=\"audio/mp3\"></audio></button>\n              </div>\n              <div className=\"drum-button\">\n                <button className=\"drum-pad\" id={SoundData[3].id} onClick={() => this.playAudio(SoundData[3].keyTrigger, SoundData[3].id)}>{SoundData[3].keyTrigger}<audio className=\"clip\" id={SoundData[3].keyTrigger} src={SoundData[3].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[4].id} onClick={() => this.playAudio(SoundData[4].keyTrigger, SoundData[4].id)}>{SoundData[4].keyTrigger}<audio className=\"clip\" id={SoundData[4].keyTrigger} src={SoundData[4].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[5].id} onClick={() => this.playAudio(SoundData[5].keyTrigger, SoundData[5].id)}>{SoundData[5].keyTrigger}<audio className=\"clip\" id={SoundData[5].keyTrigger} src={SoundData[5].url} type=\"audio/mp3\"></audio></button>\n              </div>\n              <div className=\"drum-button\">\n                <button className=\"drum-pad\" id={SoundData[6].id} onClick={() => this.playAudio(SoundData[6].keyTrigger, SoundData[6].id)}>{SoundData[6].keyTrigger}<audio className=\"clip\" id={SoundData[6].keyTrigger} src={SoundData[6].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[7].id} onClick={() => this.playAudio(SoundData[7].keyTrigger, SoundData[7].id)}>{SoundData[7].keyTrigger}<audio className=\"clip\" id={SoundData[7].keyTrigger} src={SoundData[7].url} type=\"audio/mp3\"></audio></button>\n                <button className=\"drum-pad\" id={SoundData[8].id} onClick={() => this.playAudio(SoundData[8].keyTrigger, SoundData[8].id)}>{SoundData[8].keyTrigger}<audio className=\"clip\" id={SoundData[8].keyTrigger} src={SoundData[8].url} type=\"audio/mp3\"></audio></button>\n              </div>\n            </div>\n            <div className=\"activation-button\">\n              <p>Power</p>\n              <label className=\"switch\">\n                <input type=\"checkbox\" id=\"power-checkbox\" checked={this.state.power} onChange={this.handlePower} />\n                <span className=\"slider round\"></span>\n              </label>\n              <div id=\"display\">{this.state.power ? this.state.display : ''}</div>\n              <input className=\"volume-slider\" type=\"range\" min=\"0.0\" max=\"1.0\" step=\"0.01\" defaultValue={this.state.audioVolume} onChange={this.adjustVolume} />\n            </div>\n          </div>\n        </div>\n        <footer>\n          <p>Made by <a href=\"https://github.com/Shaikot007\" target=\"_blank\" rel=\"noopener noreferrer\">Shaikot</a></p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default DrumMachine;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './DrumMachine';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}